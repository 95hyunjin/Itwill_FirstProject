<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mapper.InspectionMapper">
	
	<resultMap type="com.itwillbs.domain.ProductVO" id="productMap">
		<result property="pno" column="pno"/>
		<result property="category_code" column="category_code"/>
		<result property="pname" column="pname"/>
		<result property="regdate" column="regdate"/>
		<result property="update_date" column="update_date"/>
		<result property="price" column="price"/>
		<result property="company" column="company"/>
		<result property="sales_price" column="sales_price"/>
		<result property="divcode" column="divcode"/>
		<result property="count" column="count"/>
		<result property="account_code" column="account_code"/>
		<result property="warehouse_code" column="warehouse_code"/>
		<result property="finish_count" column="finish_count"/>
		<result property="remain_count" column="remain_count"/>
		<collection property="codeVO" resultMap="codeMap"/>
	</resultMap>

	<resultMap type="com.itwillbs.domain.CodeVO" id="codeMap">
		<result property="divcode" column="divcode"></result>
		<result property="daecode" column="daecode"></result>
		<result property="smcode" column="smcode"></result>
		<result property="korname" column="korname"></result>
	</resultMap>
	
	<!-- 검수목록 조회 -->
	<select id="selectInspection" resultMap="productMap">
		select * 
		from product p 
		join code c 
		on c.divcode = p.divcode
		where p.divcode = 2
	</select>
	<!-- 검수현황본문 조회 - product -->
	<select id="productInspectionRead" resultType="ProductVO"
		resultMap="productMap">
		select * from product where pno=#{pno}
	</select>



	<!-- 검수현황업데이트 - product -->
    <update id="productUpdateInspection" parameterType="ProductVO">
    <!-- 해당 divcode가 7인 행에서 사용자가 선택한 finish_quantity만큼 quantity에서 차감하고 나머지는 다른 업데이트로 처리 -->
        UPDATE product
        	SET count = CASE WHEN divcode = 7 THEN count - #{finish_count}
                          ELSE count
                      END,
            remain_count = CASE
                                  WHEN divcode = 7 THEN remain_count - #{finish_count}
                                  ELSE remain_count - #{finish_count}
                              END,
            divcode = #{divcode},
            finish_count = #{finish_count},
            update_date = now(),
            warehouse_code = #{warehouse_code}
        WHERE pno = #{pno};
    </update>
    
    <!-- product에서 검수완료 상태이며, remain_count가 0인 데이터 stock으로 옮기기 -->
    <insert id="productMoveToStock" parameterType="java.lang.String">
        INSERT INTO stock
        (divcode, pno, warehouse_code, category, count, regdate)
        SELECT divcode, pno, warehouse_code, SUBSTRING(pno, 1, 4) AS category, finish_count AS count, NOW() AS regdate
        FROM product
        WHERE divcode = 3 AND remain_count = 0
        ON DUPLICATE KEY UPDATE
        count = finish_count;
    </insert>
    
	<!-- product - finish양 quantity에서 빼기 -->
	<update id="productUpdateRemain">
    	update product
    	set remain_count = (#{count} - #{finish_count})
    	where pno = #{pno}
	</update>
    
	<!-- product - divcode=2 인 검수목록 조회 -->
	<select id="productInspectionDiv2" resultType="ProductVO">
		select * from product where divcode=2 order by regdate desc
	</select>
	<!-- product - divcode=3 인 검수목록 조회 -->
	<select id="productInspectionDiv3" resultType="ProductVO">
		select * from product where divcode=3 order by regdate desc
	</select>


	
	










</mapper>