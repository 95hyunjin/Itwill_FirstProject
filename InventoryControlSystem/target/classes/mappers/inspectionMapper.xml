<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mapper.InspectionMapper">
	<resultMap type="com.itwillbs.domain.InspectionVO"	id="inspectionMap">
		<result property="pno" column="pno" />
		<result property="id" column="id" />
		<result property="divcode" column="divcode" />
		<result property="quantity" column="quantity" />
		<result property="finish_quantity" column="finish_quantity" />
		<result property="remain_quantity" column="remain_quantity" />
		<result property="regdate" column="regdate" />
		<result property="update_date" column="update_date" />
		<result property="warehouse_code" column="warehouse_code" />
		<result property="category_code" column="category_code" />
		<collection property="codeVO" resultMap="codeMap"/>
	</resultMap>
	
	<resultMap type="com.itwillbs.domain.CodeVO" id="codeMap">
		<result property="divcode" column="divcode"></result>
		<result property="daecode" column="daecode"></result>
		<result property="smcode" column="smcode"></result>
		<result property="korname" column="korname"></result>
	</resultMap>
	<!-- 검수목록 조회 -->
	<select id="selectInspection" resultMap="inspectionMap">
		select c.korname, i.divcode, pno
		from inspection i 
		join code c 
		on c.divcode = i.divcode
		where i.divcode = 2
	</select>


	<!-- 검수현황본문 조회 -->
	<select id="inspectionRead" resultType="InspectionVO"
		resultMap="inspectionMap">
		select * from inspection where pno=#{pno}
	</select>


	<!-- 검수현황업데이트 -->
    <update id="updateInspection" parameterType="InspectionVO">
    <!-- 해당 divcode가 7인 행에서 사용자가 선택한 finish_quantity만큼 quantity에서 차감하고 나머지는 다른 업데이트로 처리 -->
        UPDATE inspection
        SET quantity = CASE
                          WHEN divcode = 7 THEN quantity - #{finish_quantity}
                          ELSE quantity
                      END,
            remain_quantity = CASE
                                  WHEN divcode = 7 THEN remain_quantity - #{finish_quantity}
                                  ELSE remain_quantity - #{finish_quantity}
                              END,
            divcode = #{divcode},
            id = #{id},
            finish_quantity = #{finish_quantity},
            update_date = now(),
            warehouse_code = #{warehouse_code}
        WHERE pno = #{pno};
    </update>
    <!-- inspection에서 검수완료 상태이며, remain_quantity가 0인 데이터 stock으로 옮기기 -->
    <insert id="moveToStock" parameterType="java.lang.String">
        INSERT INTO stock
        (divcode, pno, warehouse_code, category, count, regdate)
        SELECT divcode, pno, warehouse_code, SUBSTRING(pno, 1, 4) AS category, finish_quantity AS count, NOW() AS regdate
        FROM inspection
        WHERE divcode = 3 AND remain_quantity = 0
        ON DUPLICATE KEY UPDATE
        count = finish_quantity;
    </insert>
    
    
	<!-- finish양 quantity에서 빼기 -->
	<update id="updateRemain">
    	update projectdb.inspection
    	set remain_quantity = (#{quantity} - #{finish_quantity})
    	where pno = #{pno}
	</update>

	<!-- divcode=2 인 검수목록 조회 -->
	<select id="inspectionDiv2" resultType="InspectionVO">
		select * from inspection where divcode=2 order by regdate desc
	</select>

	<!-- divcode=3 인 검수목록 조회 -->
	<select id="inspectionDiv3" resultType="InspectionVO">
		select * from inspection where divcode=3 order by regdate desc
	</select>

	
	










</mapper>